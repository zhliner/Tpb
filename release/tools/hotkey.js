//! $ID: hotkey.js 2020.04.06 Tpb.Tools $
const t=window.$,e=/\s+/;class r{constructor(){this._map=new Map}config(e){for(const r of e){let e=r.key;t.isArray(e)||(e=[e]),e.forEach((t=>this.bind(t,r.command,r.exclude)))}return this}bind(r,s,i=null){return this._map.set(this._key(r),{commands:s.trim().split(e),match:i&&(e=>!t.is(e,i))}),this}will(t,e){return!!this._matches(t,e)}fire(e,r,s,i=!0){let a=this._matches(e,r.target);if(a){for(const e of a)t.trigger(r.target,e,s,!0,!0);i&&r.preventDefault()}return!!a}_matches(t,e){let r=this._map.get(t);return r&&(!r.match||r.match(e))&&r.commands}_key(t){return t.replace(/\s+/g,"").toLowerCase().replace(/\bspace\b/g," ")}}class s extends r{constructor(t,e=!0){super(),this._obj=t,this._prd=e}fire(t,e,...r){let s=this._matches(t,e.target);if(s){for(const t of s)this._obj[t](...r);this._prd&&e.preventDefault()}return!!s}}export{r as HotKey,s as ObjKey};
